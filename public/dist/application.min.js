"use strict";var ApplicationConfiguration=function(){var applicationModuleName="promptv",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","ngAria","ngMaterial","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("llistaseries"),ApplicationConfiguration.registerModule("preferits"),ApplicationConfiguration.registerModule("seriefulls"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),console.log($scope.menu),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.myInterval=5e3}]),angular.module("core").directive("slider",[function(){return{templateUrl:"modules/core/views/slider.html",restrict:"E",link:function(scope,element,attrs){console.log(element[0]),$(".autoplay").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:4e3,dots:!0,infinite:!0,speed:500,fade:!0,cssEase:"linear"})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("llistaseries").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Lista de series","llistaseries")}]),angular.module("llistaseries").config(["$stateProvider",function($stateProvider){$stateProvider.state("listLlistaseries",{url:"/llistaseries",templateUrl:"modules/llistaseries/views/list-llistaseries.client.view.html"})}]);var app=angular.module("llistaseries").controller("LlistaseriesController",["$scope","$stateParams","$location","Authentication","Llistaseries","$log",function($scope,$stateParams,$location,Authentication,Llistaseries,$log){function querySearch(query){var deferred,results=query?self.states.filter(createFilterFor(query)):self.states;return self.simulateQuery?(deferred=$q.defer(),$timeout(function(){deferred.resolve(results)},1e3*Math.random(),!1),deferred.promise):results}function searchTextChange(text){$log.info("Text changed to "+text)}function selectedItemChange(item,i){$location.path(item.link),$log.info("Item changed to "+JSON.stringify(item))}function loadAll(){var serie=Llistaseries.srv.query(),text="";serie.$promise.then(function(data){serie=data;for(var i=0;i<serie.length;i++)text+=serie[i].nom+"|"+data[i].seriefull+", ";self.states=text.split(/, +/g).map(function(state,i){return{value:state.split("|")[0].toLowerCase(),display:state.split("|")[0],link:"/seriefulls/"+state.split("|")[1]}})})}function createFilterFor(query){var lowercaseQuery=angular.lowercase(query);return function(state){return 0===state.value.indexOf(lowercaseQuery)}}$scope.authentication=Authentication,$scope.totalItems=120,$scope.currentPage=1;var self=this;self.simulateQuery=!1,self.isDisabled=!1,self.states=null,self.querySearch=querySearch,self.selectedItemChange=selectedItemChange,self.searchTextChange=searchTextChange,loadAll(),""===$scope.authentication.user?$location.path("/#!/"):$scope.find=function(){$scope.llistaseries=Llistaseries.prova.query({total:4,page:$scope.currentPage}),$scope.pageChanged=function(){$scope.llistaseries=Llistaseries.prova.query({total:4,page:$scope.currentPage})}}}]);app.run(["paginationConfig",function(paginationConfig){paginationConfig.nextText="Siguiente",paginationConfig.previousText="Anterior"}]),angular.module("llistaseries").directive("autocomplete",[function(){return{template:"modules/llistaseries/views/md-highlight-text.html",restrict:"E",link:function(scope,element,attrs){}}}]),angular.module("llistaseries").directive("autocomplete",[function(){return{template:"modules/llistaseries/views/md-autocomplete-text.html",restrict:"E",link:function(scope,element,attrs){}}}]),angular.module("llistaseries").factory("Llistaseries",["$resource",function($resource){return{srv:$resource("/llistaseries/:llistaserieId",null,{update:{method:"PUT"}}),edit:null,prova:$resource("/llistaseries/paginate/:page/:total",{},{})}}]),angular.module("preferits").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tus Favoritos","preferits")}]),angular.module("preferits").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPreferits",{url:"/preferits",templateUrl:"modules/preferits/views/list-preferits.client.view.html"})}]),angular.module("preferits").controller("PreferitsController",["$scope","$stateParams","$location","Authentication","Preferits",function($scope,$stateParams,$location,Authentication,Preferits){$scope.authentication=Authentication,$scope.create=function(){var preferit=new Preferits({name:this.name});preferit.$save(function(response){$location.path("preferits/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(preferit){if(preferit){preferit.$remove();for(var i in $scope.preferits)$scope.preferits[i]===preferit&&$scope.preferits.splice(i,1)}else $scope.preferit.$remove(function(){$location.path("preferits")})},$scope.update=function(){var preferit=$scope.preferit;preferit.$update(function(){$location.path("preferits/"+preferit._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.preferits=Preferits.query()},$scope.findOne=function(){$scope.preferit=Preferits.get({preferitId:$stateParams.preferitId})}}]),angular.module("preferits").factory("Preferits",["$resource",function($resource){return $resource("preferits/:preferitId",{preferitId:"@_id"},{update:{method:"PUT"}})}]),angular.module("seriefulls").run(["Menus",function(Menus){}]),angular.module("seriefulls").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSeriefulls",{url:"/seriefulls",templateUrl:"modules/seriefulls/views/list-seriefulls.client.view.html"}).state("viewSeriefull",{url:"/seriefulls/:seriefullId",templateUrl:"modules/seriefulls/views/view-seriefull.client.view.html"})}]),angular.module("seriefulls").controller("SeriefullsController",["$scope","$stateParams","$location","Authentication","Seriefulls","Preferits",function($scope,$stateParams,$location,Authentication,Seriefulls,Preferits){$scope.authentication=Authentication,""===$scope.authentication.user?$location.path("/#!/"):($scope.find=function(){$scope.seriefulls=Seriefulls.query()},$scope.findOne=function(){$scope.seriefull=Seriefulls.get({seriefullId:$stateParams.seriefullId}),$scope.seriefull.$promise.then(function(data){$scope.create=function(){var preferit=new Preferits({idm:data.idm,nom:data.nom,imatge:data.imatge,temporades:data.num_temporades,seriefull:null});preferit.$save(function(response){swal({title:"Enhorabuena!",text:"Añadida a favoritos",type:"success",confirmButtonText:"Aceptar"})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.numero=[];for(var i=1;i<=data.num_temporades;i++)$scope.numero.push({num:i})})})}]),angular.module("seriefulls").factory("Seriefulls",["$resource",function($resource){return $resource("seriefulls/:seriefullId",{seriefullId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/llistaseries")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","FileUploader",function($scope,$http,$location,Users,Authentication,FileUploader){$scope.uploader=new FileUploader({url:"/upload",alias:"image",removeAfterUpload:!0});$scope.user=Authentication.user,console.log($scope.user),$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);